from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram import types

from funcs import check_admin


async def menu_keyboard(user_id):
    buttons = [
        [InlineKeyboardButton(text="üìà –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å", callback_data="calculate")],
        [InlineKeyboardButton(text="üí° –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?", callback_data="info")],
        [InlineKeyboardButton(text="üõü –¢–µ—Ö–Ω–∏—á–µ—Å—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support")],
        [InlineKeyboardButton(text="üì• –°–∫–∞—á–∞—Ç—å —à–∞–±–ª–æ–Ω—ã", callback_data="download_template")],
        [InlineKeyboardButton(text="üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", callback_data="profile")]
    ]

    if await check_admin(user_id):
        buttons.append([InlineKeyboardButton(text="‚ú® –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å", callback_data="admin_panel")])

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def support_keyboard():
    buttons = [
        [InlineKeyboardButton(text="‚Äπ –ù–∞–∑–∞–¥", callback_data="menu")]
    ]

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def download_template_keyboard():
    buttons = [
        [InlineKeyboardButton(text="‚Äπ –ù–∞–∑–∞–¥", callback_data="menu")]
    ]

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def info_keyboard():
    buttons = [
        [InlineKeyboardButton(text="üìà –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å", callback_data="calculate")],
        [InlineKeyboardButton(text="‚Äπ –ù–∞–∑–∞–¥", callback_data="menu")]
    ]

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard

def calculate_keyboard():
    buttons = [
        [InlineKeyboardButton(text="‚Äπ –ù–∞–∑–∞–¥", callback_data="menu")]
    ]

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard

def auth_back_keyboard():
    buttons = [
        [InlineKeyboardButton(text="‚Äπ –ù–∞–∑–∞–¥", callback_data="profile")]
    ]

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def profile_keyboard(is_login=False):
    if is_login:
        buttons = [
            [InlineKeyboardButton(text="üìä –ò—Å—Ç–æ—Ä–∏—è", callback_data="login")],
            [InlineKeyboardButton(text="üö™ –í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞", callback_data="logout")],
            [InlineKeyboardButton(text="‚Äπ –ù–∞–∑–∞–¥", callback_data="menu")]
        ]
    else:
        buttons = [
            [InlineKeyboardButton(text="üë§ –í–æ–π—Ç–∏", callback_data="login")],
            [InlineKeyboardButton(text="üÜï –ó–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏–æ–≤–∞—Ç—å—Å—è", callback_data="register")],
            [InlineKeyboardButton(text="‚Äπ –ù–∞–∑–∞–¥", callback_data="menu")]
        ]

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard

def admin_panel_keyboard():
    buttons = [
        [InlineKeyboardButton(text="üë§ –ù–∞–∑–Ω–∞—á–∏—Ç—å/—É–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞", callback_data="admin_handler")],
        [InlineKeyboardButton(text="üÜï –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—ã–µ —Ç–∞–±–ª–∏—Ü—ã", callback_data="upload_new_tables")],
        [InlineKeyboardButton(text="‚Äπ –ù–∞–∑–∞–¥", callback_data="menu")]
    ]

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def admin_role_handler_keyboard(status):
    buttons = []
    if status:
        buttons.append([InlineKeyboardButton(text="üë§ –ù–∞–∑–Ω–∞—á–∏—Ç—å –∞–¥–º–∏–Ω–æ–º", callback_data="make_admin")])
    else:
        buttons.append([InlineKeyboardButton(text="üë§ —É–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞", callback_data="remove_admin")])
    buttons.append([InlineKeyboardButton(text="‚Äπ –ù–∞–∑–∞–¥", callback_data="menu")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)